.\" $Id$
.\" rbldnsd manpage
.\"
.TH rbldnsd 8 "Apr 2003"
.SH NAME
rbldnsd \- DNS daemon suitable for running DNS\-based blocklists
.SH SYNOPSIS
.B rbldnsd
[options]
.IR zone : dataset ...

.SH DESCRIPTION
.PP
.B rbldnsd
is a small DNS\-protocol daemon which is designed to handle
queries to DNS\-based IP\-listing or NAME\-listing services.
Such services are a simple way to share/publish a list of
IP addresses or (domain) names which are "listed" for for
some reason, for example in order to be able to refuse a
service to a client which is "listed" in some blocklist.

.PP
.B rbldnsd
is not a general\-purpose nameserver.  It will answer to
A and TXT (and SOA and NS if such RRs are specified) queries,
and has limited ability to answer to some other types of queries.

.PP
.B rbldnsd
tries to handle data from two different perspectives: given
a set (or several) of "listed entries" (e.g. IP address ranges
or domain names), it builds and serves a DNS zone.  Note the
two are not the same: list of spammer's IPs is NOT a DNS zone,
but may be represented and used as such, provided that some
additional information necessary to build complete DNS zone
(e.g. NS and SOA records, maybe A records necessary for http
to work) is available.  In this context, \fBrbldnsd\fR is very
different from other general\-purpose nameservers such as BIND
or NSD: \fBrbldnsd\fR operates with \fIdatasets\fR (sets of
entries \- IP addresses or domain names, logically grouped
together), while other general\-purpose nameservers operates
with zones.  The way how \fBrbldnsd\fR operates may be somewhat
confusing to BIND experts.

.PP
For \fBrbldnsd\fR, a building block is a dataset: e.g., set of
insecure/abuseable hosts (IP addresses), set of network ranges
that belongs to various spam operations (IP ranges), domain
names that belong to spammers (RHSBL) and so on.  Usually,
different kind of information is placed into separate file,
for easy maintenance.  From a number of such datasets, \fBrbldnsd\fR
constructs a number of DNS zones as specified on command line.
A single dataset may be used for several zones, and a single
zone may be constructed from several datasets.

.PP
.B rbldnsd
will answer queries to DNS zones specified on the command
line as a set of zone specifications.
Each zone specification consists of zone basename, dataset type
and a comma\-separated list of files that forms a given dataset:
.IR   zone : type : file , file ,...

.PP
Several zones may be specified in command line, so that
.B rbldnsd
will answer queries to any of them.  Also, a single zone
may be specified several times with different datasets,
so it is possible to form a zone from a combination
of several different dataset.  The same dataset may be
reused for several zones too (and in this case, it will
be read into memory only once).

.PP
There are several dataset formats available, each is suitable
and optimized (in terms of memory, speed and ease of use)
for a specific task.  Available dataset types may be grouped
into 3 categories:
.IP
lists of IP addresses.  When a query is done to a zone with such
data, query is interpreted as an IP address in a reverse form
(similar to in\-addr.arpa zone).  If the address is
found in dataset data,
.B rbldnsd
will return A and TXT records specified in data for that IP.
This is a classical IP\-based blocklist.
.IP
lists of domain names.  Similar to list of IP addresses, but
with generic domain names instead of IPs (wildcards allowed).
This type of data may be used to form a blocklist of e.g.
sender domain names.
.IP
generic list of various types of records, as an auxilary data
to form a complete nameserver.  This format is similar to bind\-style
datafiles, but very simplified.  One may specify A, TXT, NS and MX
records here.

.SH OPTIONS

.PP
The following options may be specified:

.IP "\fB\-u\fR \fIuser\fR[:\fIgroup\fR]"
\fBrbldnsd\fR will change its userid to the specified \fIuser\fR, which
defaults to \fBrbldnsd\fR, and \fIgroup\fR, which by default is the
primary group of a \fIuser\fR. \fBrbldnsd\fR will refuse to run as the root
user, since this is insecure.

.IP "\fB\-r\fR \fIrootdir\fR"
\fBrbldnsd\fR will chroot to \fIrootdir\fR if specified.  Data files
should be available inside \fIrootdir\fR.

.IP "\fB\-w\fR \fIworkdir\fR"
\fBrbldnsd\fR will change its working directory to \fIworkdir\fR
(after chrooting to \fIrootdir\fR if \fB\-r\fR option is also specified).
May be used to shorten filename paths.

.IP "\fB\-b\fR \fIaddress\fR"
\fBrbldnsd\fR will bind to specified \fIaddress\fR which defaults to
a wildcard address.  Either numeric IP address or a hostname may be
specified.  \fBrbldnsd\fR will use first available address for a
multihomed hostname.

.IP "\fB\-P\fR \fIport\fR"
specify non\-default port \fIport\fR to listen on, either numerically
or symbolicaly.  Default port is "domain" (usually taken from
/etc/services or equivalent).  \fBrbldnsd\fR uses a UDP socket.

.IP \fB\-4\fR
Use IPv4 listening socket/transport, do not attempt to use IPv6.

.IP \fB\-6\fR
Use IPv6 listening socket/transport, do not attempt to use IPv4.

.IP "\fB\-t\fR \fIttl\fR"
Set answer time\-to\-live value to be \fIttl\fR seconds.  All answers will
contain \fIttl\fR as a value of time\-to\-live field.  \fIttl\fI may
be followed by a single character specifying the time unit: s for seconds,
m for minutes, h for hours, d for days and w for weeks.  If no unit
modifier given, seconds assumed.  Default \fIttl\fR is 35m.

.IP "\fB\-c\fR \fIcheck\fR"
Set interval between checking for zone file changes to be \fIcheck\fR,
default is 1m (one minute).  \fBrbldnsd\fR will check zone file's last
modification time every so often, and if it detects a change, zone will
be automatically reloaded.  Setting this value to 0 disables automatic
zone change detection.  This procedure may also be triggered by sending
a SIGHUP signal to \fBrbldnsd\fR (see SIGNALS section below).

.IP \fB\-e\fR
Allow non\-network addresses to be used in CIDR ranges.  Normally,
\fBrbldnsd\fR rejects addresses such as 127.2.3.4/24, where prefix
is not within the network mask derived from bit number (in this
case, correct form is 127.2.3.0/24, note the trailing zero in prefix).
This is done in order to catch possible typos in zones (\fBrbldnsd\fR
will warn about a problem and will ignore such entry).  This option
disables checking whether the CIDR prefix fits within the network mask.

.IP \fB\-q\fR
Quick and quiet start.  Normally,
.B rbldnsd
does zone load in foreground, printing progress and statistic info,
and aborts in case of any errors.  With this flag, nothing will
be printed and first zone load will be done in background (unless
.B \-n
option is also given), and zone load errors will be non\-fatal.

.IP "\fB\-p\fR \fIpidfile\fR"
Write rbldnsd's pid to the specified \fIpidfile\fR, so it will be easily
findable.  This file gets written before entering a chroot jail (if specified)
and before changing userid, so it's ok to specify e.g. /var/run/rbldnsd.pid
here.

.IP "\fB\-l\fR \fIlogfile\fR"
Specifies a file to which log all requests made.  This file is created
after entering a chroot jail and becoming a user.  Logfiles may be quite
large, esp. on busy sites (\fBrbldnsd\fR will log \fIevery\fR recognized
request if this option is specified).  This option is mainly intended for
debugging purposes.  Upon receiption of SIGHUP signal, \fBrbldnsd\fR
reopens its logfile.  If \fIlogfile\fR prefixed with a plus sign (+),
logging will not be buffered (i.e. each line will be flushed to disk);
by default, logging is buffered to reduce system load.

.IP \fB\-n\fR
Do not become a daemon.  Normally, \fBrbldnsd\fR will fork and go to the
background after successful initialization.  This option disables this
behaviour.

.IP \fB\-s\fR
Log memory usage info (obtained via mallinfo(3) routine) and (re)load
times (obtined via utimes(2) routine) on zone (re)loads.

.IP \fB\-d\fR
Dump all zones to stdout in BIND format and exit.  This may be suitable
to convert easily editable rbldnsd-style data into BIND zone.  \fBrbldnsd\fR
dumps all zones as one stream, so one may want to specify only one zone
with \fB\-d\fR.  Zone file will have appropriate $ORIGIN tags.  Note
that data generated may be really huge (as BIND format isn't appropriate
for this sort of things), and some entries may not be really the same
in BIND as in \fBrbldnsd\fR (e.g., IP netblocks of large size will be
represented as wildcard entries \- 10.0.0.0/8 will become *.10; excluded
entries will be represented by a CNAME to `excluded' name, so such name
should not be present in a data set).  In this mode, \fBrbldnsd\fR ignores
\fB\-r\fR (root directory) option.

.IP \fB\-v\fR
Do not show exact version information in response to version.bind CH TXT
queries (by default \fBrbldnsd\fR responds to such queries since version
0.98).  With single \fB\-v\fR, \fBrbldnsd\fR will only return "rbldnsd"
to the caller, without the version number.  Second \fB\-v\fR disables
providing any information in response to such requests, i.e. \fBrbldnsd\fR
will return REFUSE code.

.SH "DATASET TYPES AND FORMATS"

.PP
Dataset files are text files which are interpreted depending on
type specified in command line.  Empty lines and lines starting
with hash character (#) or semicolon (;) are ignored, except for
a special case outlined below.  A (comma\-separated) list of files
is interpreted as if all files where logically combined into one
single file.

.PP
If a line starts with a dollar sign ($), hash character and a dollar
sign (#$), semicolon and dollar sign (;#) or colon and a dollar sign (:$),
it is interpreted in a special way, regardless of dataset type (this
is one exception where a line starting with hash character is not
ignored \- to be able to reuse zone files of DJB's rbldns).
The following keywords, following a dollar sign, are recognized:

.IP "\fB$SOA\fR \fIttl origindn persondn serial refresh retry expire minttl"
Specifies SOA (Start Of Authority) record for all zones using this
dataset.  Only first SOA record is interpreted.  This is the only way
to specify SOA \- by default, \fBrbldnsd\fR will not add any SOA record
into answers, and will REFUSE to answer to certain queries (notably, SOA
query to zone's base domain name).  It is recommended, but not mandatory
to specify SOA record for every zone.  If no SOA is given, negative replies
will not be cacheable by caching nameservers.
.IP
If \fIserial\fR value specified is zero, timestamp of most recent
modified file will be substituted as \fIserial\fR.
.IP
If \fIttl\fR field is zero, default ttl (\fB\-t\fR option or last \fB$TTL\fR
value, see below) will be used.
.IP
All time fields (ttl, refresh, retry, expire, minttl) may be specified
in time units.  See \fB\-t\fR option for details.

.IP "\fB$NS\fR \fIttl\fR \fInameserverdn\fR"
Specifies NS (Name Server) record for all zones using this dataset.
For any given zone (which may consist of several datasets), only
first 20 NS records will be recognized.  If \fIttl\fR is zero, default
ttl will be used.

.IP "\fB$TTL\fR \fItime-to-live\fR"
Specifies TTL (time-to-live) value for all records in current dataset.
See also \fB\-t\fR option.  \fB$TTL\fR special overrides \fB\-t\fR value
on a per-dataset basis.

.IP "\fB$\fIn\fR \fItext\fR"
(\fIn\fR is a single digit).
Specifies a substitution variable for use as $\fIn\fR placeholders.
Valid in dnset and ip4set datsets, ignored in generic dataset.
See below for usage.

.PP
The following dataset types are available:

.IP \fBip4set\fR
A set of IP addresses or CIDR address ranges, together with A and
TXT resulting values.  IP addresses are specified one per line, by an IP
address prefix (initial octets), complete IP address, CIDR range, or IP
prefix range (two IP prefixes or complete addresses delimited by
a dash, inclusive).  Examples, to specify 127.0.0.0/24:
.nf
  127.0.0.0/24
  127.0.0
  127/24
  127\-127.0.0
  127.0.0.0\-127.0.0.255
  127.0.0.1\-255
.fi
to specify 127.16.0.0\-127.31.255.255:
.nf
  127.16.0.0\-127.31.255.255
  127.16.0\-127.31.255
  127.16\-127.31
  127.16\-31
  127.16.0.0/12
  127.16.0/12
  127.16/12
.fi
Note that in prefix range, last boundary is completed with all\-ones (255),
not all\-zeros line with first boundary and a prefix alone.  In prefix
ranges, if last boundary is only one octet (127.16\-31), it is treated
as "suffix", as value of last \fIspecified\fR octet of the first boundary
prefix (127.16.0\-31 is treated as 127.16.0.0\-127.16.31.255, i.e.
127.16.0.0/19).
.IP
After an IP address range, A and TXT values for a given entry may be specified.
If none given, default values in current scope (see below) applies.  If a value
starts with a colon, it is interpreted as a pair of A record and TXT template,
delimited by colon (:127.0.0.2:This entry is listed).  If a value does not start
with a colon, it is interpreted as TXT template only, with A record defaulting
to the default A value in current scope.
.IP
IP address range may be followed by a comment char (either hash character (#)
or semicolon (;)), e.g.:
.nf
  127/8 ; loopback network
.fi
In this case all characters up to the end of line are ignored, and default A
and TXT values will be used for this IP range.
.IP
Every IP address that fits within any of specified ranges is "listed", and
.B rbldnsd
will respond to reverse queries against it within specified zone with
positive results.  In contrast, if an entry starts with an exclamation
sign (!), this is an
.I exclusion
entry, i.e. corresponding address range is excluded from being listed
(and any value for this record is ignored).  This may be used to specify
large range except some individual addresses, in a compact form.
.IP
If a line starts with a colon (:), this line specifies the default A value
and TXT template to return (see below) for all subsequent entries up
to end of current file.  If no default entry specified, and no value
specified for a given record, \fBrbldnsd\fR will return 127.0.0.2 for
matching A queries and no record for matching TXT queries.  If TXT
record template is specified and contains occurences of of dollar sign
($), every such occurence is replaced with an IP address in question,
so singe TXT template may be used to e.g. refer to a webpage for an
additional information for a specific IP address.

.IP \fBdnset\fR
Set of (possible wildcarded) domain names with associated A and TXT values.
Similar to \fBip4set\fR, but instead of IP addresses, data consists of
domain names (\fInot\fR in reverse form).  One domain name per line,
possible starting with wildcard (either with star\-dot (*.) or just a dot).
Entry starting with exclamation sign is exclusion.  Default value for
all subsequent lines may be specified by a line starting with a colon.
.IP
Wildcards are interpreted as follows:
.RS
.IP example.com
only example.com domain is listed, not subdomains thereof.  Not a wildcard
entry.
.IP *.example.com
all subdomains of example.com are listed, but not example.com itself.
.IP .example.com
all subdomains of example.com \fIand\fR example.com itself are listed.
This is a shortcut: to list a domain name itself and all it's subdomains,
one may either specify two lines (example.com and *.example.com), or
one line (.example.com).
.RE
.IP
This zone type may be used instead of \fBip4set\fR,
provided all CIDR ranges are expanded and reversed (but in
this case, TXT template will be expanded differently).
Any text in line after domain name is ignored.

.IP \fBgeneric\fR
Generic type, simplified bind\-style format.  Every record
should be on one line (line continuations are not supported),
and should be specified completely (i.e. all domain names in
values should be fully\-qualified, entry name may not be omitted).
No wildcards are accepted.  Only A, TXT, and MX records
are recognized.  TTL value may be specified before record type.  Examples:
.IP
.nf
 # bl.ex.com
 # specify some values for current zone
 $NS 0 ns1.ex.com
 $NS 0 ns2.ex.com
 # record with TTL
 www 3000 A 127.0.0.1
 about TXT "ex.com combined blocklist"
.fi

.IP \fBcombined\fR
This is a special dataset that stores no data by itself but acts
like a container for several other datasets of any type except of
combined type itself.  The data file contains an optional common section,
where various specials are recognized like $NS, $SOA, $TTL (see above),
and a series of sections, each of which defines one (nested) dataset
and several subzones of the base zone, for which this dataset should
be consulted.  New (nested) dataset starts with a line
.nf
  $DATASET \fItype\fR \fIsubzone\fR \fIsubzone\fR...
.fi
and all subsequent lines up to the end of current file or to next
$DATASET line are interpreted as a part of dataset of type \fItype\fR.
Note that combined datasets cannot be nested.  Every \fIsubzone\fR will
always be relative to the base zone name specified on command line.
If \fIsubzone\fR specified as single character "@", dataset will be
connected to the base zone itself.
.IP
This dataset type aims to simplify subzone maintenance, in order to
be able to include several subzones in one file for easy data transfer,
atomic operations and to be able to modify list of subzones on remote
secondary nameservers.
.IP
Example of a complete dataset that contains subzone `proxies' with a
list of open proxies, subzone `relays' with a list of open relays, subzone
`multihop' with output IPs of multihop open relays, and the base zone
itself includes proxies and relays but not multihops:
.nf
  # common section
  $NS 1w ns1.ex.com
  $NS 1w ns2.ex.com
  $SOA 1w ns1.ex.com admin.ex.com 0 2h 2h 1w 1h
  # list of open proxies,
  # in `proxies' subzone and in base zone
  $DATASET ip4set proxies @
  :2:Open proxy, see http://bl.ex.com/proxy/$
  127.0.0.2
  127.0.0.10
  # list of open relays,
  # in `relays' subzone and in base zone
  $DATASET ip4set relays @
  :3:Open relay, see http://bl.ex.com/relay/$
  127.0.0.2
  127.0.2.10
  # list of optputs of multistage relays,
  # in `multihop' subzone only
  $DATASET ip4set multihop
  :4:Multihop open relay, see http://bl.ex.com/relay/$
  127.0.0.2
  127.0.9.12
  # for the base zone and all subzones,
  # include several additional records
  $DATASET generic proxies relays multihop @
  @ A 127.0.0.8
  www A 127.0.0.8
  @ MX mx.ex.com
  # the above results in having the following records
  # (provided that the base zone specified is bl.ex.com):
  #  proxies.bl.ex.com A 127.0.0.8
  #  www.proxies.bl.ex.com 127.0.0.8
  #  relays.bl.ex.com A 127.0.0.8
  #  www.relays.bl.ex.com 127.0.0.8
  #  multihop.bl.ex.com A 127.0.0.8
  #  www.multihop.bl.ex.com 127.0.0.8
  #  bl.ex.com A 127.0.0.8
  #  www.bl.ex.com 127.0.0.8
.fi
.IP
Note that $NS and $SOA values applies to the base zone \fIonly\fR,
regardless of the placement in the file.  Unlike the $TTL values and
$\fIn\fR substitutions, which may be both global and local for a
given (sub\-)dataset.

.SS "Resulting A values and TXT templates"
.PP
In all zone file types except generic, record values are
specified as following:
.nf
  :127.0.0.2:Blacklisted: http://example.com/bl?$
.fi
If a line starts with a colon, it specifies default A and TXT for all
subsequent entries in this file.  Similar format is used to
specify values for individual records, with the A value (enclosed by
colons) being optional:
.nf
  127.0.0.2 :127.0.0.2:Blacklisted: http://example.com/bl?$
.fi
or, without specific A value:
.nf
  127.0.0.2 Blacklisted: http://example.com/bl?$
.fi

.PP
Two parts of a line, delimited by second colon, specifies
A and TXT record values.  Both are optional.  By default
(either if no default line specified, or no IP address
within that line),
.B rbldnsd
will return 127.0.0.2 as A record.  127.0.0 prefix may be
omitted, so the above example may be simplified to:
.nf
  :2:Blacklisted: http://example.com/bl?$
.fi
There is no default TXT value, so
.B rbldnsd
will not return anything for TXT queries it TXT isn't
specified.
.PP
In a TXT template, some substitutions are available.  In particular,
\fB$\fIn\fR sequence, where \fIn\fR is a single digit, is replaced
by substitution variable $\fIn\fR defined for this dataset (see above
for special dataset entries).  Single dollar sign ($) is replaced by
a listed entry (IP address for ip4set dataset and domain name for
dnset dataset).  To specify a dollar sign directly, double it.
.PP
For example, the following lines:
.nf
  $1 See http://www.example.com/bl
  $2 for details
  127.0.0.2  $1/spammer/$ $2
  127.0.0.3  $1/relay/$ $2
.fi
will result in the following text to be generated:
.nf
  See http://www.example.com/bl/spammer/127.0.0.2 for details
  See http://www.example.com/bl/relay/127.0.0.3 for details
.fi

.SH SIGNALS

.B Rbldnsd
handles the following signals:

.IP \fBSIGHUP\fR
recheck zone files and reload any outdated ones.  This is done
automatically if enabled, see \fB\-c\fR option.  Additionally,
.B rbldnsd
will reopen logfile upon receiving SIGHUP, if specified
(\fB\-l\fR option).

.IP "\fBSIGTERM\fR, \fBSIGINT\fR"
Terminate process.

.IP \fBSIGUSR1\fR
Log current statistic counters into syslog.
.B Rbldnsd
collects how many packets it handled, how many bytes was received,
sent, how many OK requests/replies (and how many answer records)
was received/sent, how many NXDOMAIN answers was sent, and how
many errors/refusals/etc was sent, in a period of time.

.IP \fBSIGUSR2\fR
The same as SIGUSR1, but reset all counters and start new sample
period.

.SH NOTES

.PP
All keys specified in dataset files are always relative to
the zone base DN.  In contrast, all the values (NS and SOA
records, MX records in generic dataset) are absolute.  This
is different from BIND behaviour, where trailing dot indicates
whenever this is an absolute or relative DN.  Trailing dots
in domain names are ignored by \fBrbldnsd\fR.

.PP
Several zones may be served by
.BR rbldnsd ,
every zone may consist of several datasets.  There are numerous
ways to combine several data files into several zones.  For
example, suppose you have a list of dialup ranges in file
named `dialups', and a list of spammer's ip addresses in file
named `spammers', and want to serve 3 zones with \fBrbldnsd\fR:
dialups.bl.ex.com, spam.bl.ex.com and bl.ex.com which is a
combination of the two.  There are two ways to do this:
.PP
.nf
 rbldnsd \fIoptions...\fR \\
   dialups.bl.ex.com:ip4set:dialups \\
   spam.bl.ex.com:ip4set:spammers \\
   bl.ex.com:ip4set:dialups,spammers
.fi
.PP
or:
.PP
.nf
 rbldnsd \fIoptions...\fR \\
   dialups.bl.ex.com:ip4set:dialups \\
   spam.bl.ex.com:ip4set:spammers \\
   bl.ex.com:ip4set:dialups \\
   bl.ex.com:ip4set:spammers
.fi
.PP
(note you should specify combined bl.ex.com zone
.I after
all its subzones in a command line, or else subzones
will not be consulted at all).
.PP
In the first form, there will be 3 independant data
sets, and every record will be stored 2 times in
memory, but only one lookup will be needed to resolve
queries for combined bl.ex.com.  In second form,
there will be only 2 data sets, every record will be
stored only once (both datasets will be reused), but
2 lookups will be needed to resolve queries against
combined bl.ex.com zone (but difference in speed is
almost unnoticeable).  Note that when combining
several data files into one dataset, an exclusion entry
in one file becomes exclusion entry in the whole dataset
(which may be a problem when combining dialups, where
exclusions are common, with open relays/proxies, where
exclusions are rare if at all used).
.PP
Similar effect may be achieved by using \fBcombined\fR
dataset type, sometimes more easily.  \fBcombined\fR
dataset results in every nested dataset to be used
independantly, like in second form above.

.PP
\fBcombined\fR dataset requires \fBrbldnsd\fR to be the
authoritative nameserver for the whole base zone.  Most
important, one may specify SOA and NS records for the
base zone \fIonly\fR.  So, some DNSBLs which does not
use a common subzone for the data, cannot use this dataset.
An example being DSBL.org DNSBL, where each of list.dsbl.org,
multihop.dsbl.org and unconfirmed.dsbl.org zones are separate,
independant zones with different set of nameservers.  But for
DSBL.org, where each dataset is really independant and used only
once (there's no (sub)zone that is as a combinations of other
zones), \fBcombined\fR dataset isn't necessary.  In contrast,
relays.osirusoft.com and SORBS.net zones, where several subzones
used and main zone is a combination of several subzones,
\fBcombined\fR dataset is a way to go.

.PP
.B generic
dataset type is very rudimentary.  It's purpose is to
complement all the other type to form complete nameserver
that may answer to A, TXT and MX queries.  This is useful
mostly to define A records for HTTP access (relays.osirusoft.com
A, www.relays.osirusoft.com A just in case), and maybe description
texts as a TXT record.

.PP
Since \fBrbldnsd\fR only searches \fIone\fR, most closely matching
(sub)zone for every request, one cannot specify a single e.g.
\fBgeneric\fR dataset in form
.nf
  proxies      TXT list of open proxies
  www.proxies  A 127.0.0.8
  relays       TXT list of open relays
  www.relays   A 127.0.0.9
.fi
for several (sub)zones, each of which are represented as a zone
too (either in command line or as \fBcombined\fR dataset).
Instead, several \fBgeneric\fR datasets should be specified,
separate one for every (sub)zone.  If the data for every subzone
is the same, the same, single dataset may be used, but it should
be specified for every zone it should apply to (see \fBcombined\fR
dataset usage example above).

.PP
For nameserver records, it is highly recommended to list
nameservers for a zone to be in different zone (e.g. in parent
zone), not controlled by \fBrbldnsd\fR.  \fBrbldnsd\fR does not
fill ADDITIONAL answer section with addresses of nameservers.

.SH BUGS

.PP
Most of the bugs outlined in this section aren't really
bugs, but present due to non-standartized and thus unknown
expected behaviour of a nameserver that serves a DNSBL zone.
.B rbldnsd
matches BIND runtime behaviour where appropriate, but not
always.

.PP
.B rbldnsd
lowercases some domain names (the ones that are lookup keys,
e.g. in `generic' and `dnset' datasets) when loading, to speed
up lookup operations.  This isn't a problem in most cases.

.PP
There is no TCP mode.  If a resource record does not fit UDP
packet (512 bytes), it will be silently ignored.  For most
usages, this isn't a problem, because there should be only a
few RRs in an answer, and because one record is usually sufficient
to decide whenever a given entry is "listed" or not.
.B rbldnsd
isn't a full\-featured nameserver, after all.

.PP
.B rbldnsd
will not always return a list of nameserver records in the AUTHORITY
section of every positive answer: NS records will be provided
(if given) only if there's a room for them in single UDP packet.
If records does not fit, AUTHORITY section will be empty.

.PP
Also, \fBrbldnsd\fR does not add A records into the ADDITIONAL
section in answers for nameservers.  In order to work around
this, set up nameservers inside another domain/zone that
isn't handled by \fBrbldnsd\fR (and thus \fBrbldnsd\fR is
not authoritative for that zone), i.e. instead of using
e.g. ns0.list.dsbl.org NS for list.dsbl.org zone, use
n0-list.dsbl.org (inside parent zone, not controlled by
\fBrbldnsd\fR).  Since the parent zone is accessed much less
frequently than the DNSBL zone itself, it may require less
nameservers (and much less load).

.PP
.B rbldnsd
does not allow AXFR operations.  For DNSBLs, AXFR is the
stupidiest yet common thing to do \- use rsync for zone
transfers instead.  This isn't a bug in
.B rbldnsd
itself, but in common practice of using AXFR and the like
to transfer huge zones in a format which isn't suitable for
such a task.  Perhaps in the future, if there will be some
real demand, I'll implement AXFR "server" support (so that
.B rbldnsd
will be able to act as master for BIND nameservers, but not
as secondary), but the note remains: use rsync.

.PP
.B rbldnsd
truncates all TXT records to be at most 255 bytes.  DNS specs
allows longer TXTs, but long TXTs is something that should be
avoided as much as possible \- TXT record is used as SMTP
rejection string.  Note that DNS UDP packet is limited to 512
bytes.
.B rbldnsd
will log a warning when such truncation occurs.

.SH VERSION

This manpage corresponds to \fBrbldnsd\fR version \fB0.98\fR.

.SH AUTHOR

The \fBrbldnsd\fR daemon written by Michael Tokarev <mjt@corpit.ru>,
based on ideas by Dan Bernstein and his djbdns package.

.SH LICENCE
GPL.
