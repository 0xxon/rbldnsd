$Id$

TODO list for rbldnsd, in no particular order.

 * AAAA, CNAME, PTR and other types of records, and NS and SOA
   revisited.  It seems rbldnsd should return some definitive
   answer to ALL query tyes (maybe except of AXFR or the like),
   and should "propagate" NS/SOA from zone.example.com to all
   2.0.0.127.zone.example.com.  At least BIND does that.  Hmm.
   Either way, it shouldn't return NXDOMAIN for zone.example.com
   NS or SOA query even if there's no generic records for that.
   SOA should be returned with every answer it seems.

 * maybe multi-children environment.  Seems to be unnecessary.

 * review all names to be consistent

 * implement TCP mode (in separate process, to reduce number of syscalls)

 * implement AXFR query - stupid idea but AXFR is widely used

 * maybe: AXFR client to convert DNS zones into rbldnsd fomat

 * control socket for reloads.  This may be done in a separate
   process which will listen for requests on control socket and
   send signal to it's child.  This will also give us an ability
   to monitor and restart failed child (ala supervise)

 * on reloads, fork a child with current in-memory zones, to
   serve requests while reloading?  With "supervised" variant,
   that may be two different childs: fork new child for new
   data, wait when it will be ready and kill old child.  Requires
   twice more memory.

 * allow 127.0.0.1/255.255.255.0 form?  Seems to be redundrand
   (CIDR exists), and it's not obvious how to handle masks like
   255.0.255.0 (what a mess)

 * add `fnmatch' (or dnpat) type, to handle shell-style wildcards
   (no regexps please)

 * how about AAAA queries?  IPv6-enabled sendmail on Solaris9 requests
   AAAA records (2.0.0.127.blocklist.example.com AAAA).  Currently,
   bind chokes on rbldnsd refusal here (returning SERVFAIL to sendmail),
   so the whole thing does not work.  Should rbldnsd make "fake"
   AAAA records from existing A records here?  Note that asking AAAA
   in this case is just a waste of resources.

