$Id$

TODO list for rbldnsd, in no particular order.

 * recheck whenever SOA behaviour is correct

 * allow specifying different TTLs for different records in generic dataset,
   for SOAs and per dataset.

 * review logging.  It should be possible to specify which packets
   (qtype, rcode, bad etc) to log in addition to filtering by client's IP.

 * maybe multi-children environment.  Seems to be unnecessary.

 * review all names to be consistent (partially done)

 * implement TCP mode (in separate process, to reduce number of syscalls)

 * implement AXFR query - stupid idea but AXFR is widely used

 * maybe: AXFR client to convert DNS zones into rbldnsd fomat

 * control socket for reloads.  This may be done in a separate
   process which will listen for requests on control socket and
   send signal to it's child.  This will also give us an ability
   to monitor and restart failed child (ala supervise)

 * on reloads, fork a child with current in-memory zones, to
   serve requests while reloading?  With "supervised" variant,
   that may be two different childs: fork new child for new
   data, wait when it will be ready and kill old child.  Requires
   twice more memory.

 * allow 127.0.0.1/255.255.255.0 form?  Seems to be redundrand
   (CIDR exists), and it's not obvious how to handle masks like
   255.0.255.0 (what a mess)

 * add `fnmatch' (or dnpat) type, to handle shell-style wildcards
   (no regexps please)
